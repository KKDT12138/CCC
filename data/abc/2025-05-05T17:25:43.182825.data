environ({'123PAN': 'D:\\Apply\\123\\123pan\\123pan.exe', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPCODE_VM_OPTIONS': 'D:\\Apply\\IDEA\\IntelliJ IDEA\\jetbra\\vmoptions\\appcode.vmoptions', 'APPDATA': 'C:\\Users\\13592\\AppData\\Roaming', 'AQUA_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\aqua.vmoptions', 'CATALINA_BASE': 'D:\\tomcat', 'CATALINA_HOME': 'D:\\tomcat', 'CATALINA_TMPDIR': 'D:\\tomcat\\temp', 'CHOCOLATEYINSTALL': 'C:\\ProgramData\\chocolatey', 'CHOCOLATEYLASTPATHUPDATE': '133793881289113120', 'CLASSPATH': '.;C:\\Program Files\\Java\\jdk-1.8\\lib;C:\\Program Files\\Java\\jdk-1.8\\lib\\tools.jar', 'CLION_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\clion.vmoptions', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'JIMKK', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DATAGRIP_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\datagrip.vmoptions', 'DATASPELL_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\dataspell.vmoptions', 'DEVECOSTUDIO_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\devecostudio.vmoptions', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'EFC_11988': '1', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'GATEWAY_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\gateway.vmoptions', 'GOLAND_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\goland.vmoptions', 'GOPATH': 'D:\\Code\\go\\go\\workspace;D:\\Code\\go\\go\\library', 'GOROOT': 'D:\\Code\\go\\go', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\13592', 'IDEA_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\idea.vmoptions', 'INTELLIJ IDEA': 'D:\\Apply\\IDEA\\IntelliJ IDEA 2024.2.0.2\\bin;', 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk-1.8', 'JETBRAINSCLIENT_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\jetbrainsclient.vmoptions', 'JETBRAINS_CLIENT_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\jetbrains_client.vmoptions', 'LOCALAPPDATA': 'C:\\Users\\13592\\AppData\\Local', 'LOGONSERVER': '\\\\JIMKK', 'M2_HOME': 'D:\\Code\\maven\\apache-maven-3.9.9\\bin', 'MAVEN_HOME': 'D:\\Code\\maven\\apache-maven-3.9.9', 'NUMBER_OF_PROCESSORS': '20', 'OLLAMA_HOST': '0.0.0.0:12138', 'OLLAMA_MODELS': 'D:\\ollamamodles', 'ONEDRIVE': 'C:\\Users\\13592\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'D:\\Apply\\vmware\\bin\\;D:\\Apply\\fortify\\bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\java8path;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python39;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python39\\Scripts;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\13592\\AppData\\Local\\Programs\\Ollama;C:\\Windows\\System32;C:\\Program Files\\Java\\jdk-1.8\\bin;C:\\Program Files\\Java\\jdk-1.8\\jre\\bin;D:\\tomcat\\bin;D:\\tomcat\\lib;C:\\WINDOWS\\system32;D:\\mingw64\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin;D:\\Apply\\wapp\\bin\\php\\php7.4.33;D:\\Apply\\anaconda3;D:\\Apply\\anaconda3\\Scripts;D:\\Apply\\anaconda3\\Library\\bin;D:\\Apply\\anaconda3\\Library\\mingw-w64\\bin;C:\\Program Files\\NVIDIA Corporation\\NVIDIA app\\NvDLISR;D:\\Apply\\PSTools;C:\\Program Files\\dotnet\\;D:\\Code\\go\\go\\bin;D:\\Code\\maven\\apache-maven-3.9.9\\bin;D:\\Code\\tcc\\bin;D:\\Code\\mingw\\bin;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn\\;C:\\Program Files\\Java\\jdk-1.8\\bin;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin\\;C:\\Users\\13592\\AppData\\Local\\Microsoft\\WindowsApps;D:\\mingw64\\bin;D:\\Code\\VSCODE\\Microsoft VS Code\\bin;D:\\Code\\python\\PyCharm Community Edition 2024.1.3\\bin;;C:\\Users\\13592\\AppData\\Local\\GitHubDesktop\\bin;D:\\Apply\\Nmap;D:\\Apply\\IDEA\\IntelliJ IDEA 2024.2.0.2\\bin;;D:\\Apply\\Windsurf\\bin;C:\\Users\\13592\\AppData\\Roaming\\npm;D:\\Code\\python\\pythonProject\\venv\\Scripts;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python39;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python39\\Scripts;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python312;C:\\Users\\13592\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;;D:\\Apply\\PhpStorm 2021.3.3\\bin;', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PHPSTORM': 'D:\\Apply\\PhpStorm 2021.3.3\\bin;', 'PHPSTORM_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\phpstorm.vmoptions', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 154 Stepping 3, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '9a03', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PROMPT': '$P$G', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PT6HOME': 'E:\\CPTv62\\Cisco Packet Tracer 6.2sv', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM COMMUNITY EDITION': 'D:\\Code\\python\\PyCharm Community Edition 2024.1.3\\bin;', 'PYCHARM_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\pycharm.vmoptions', 'RIDER_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\rider.vmoptions', 'RUBYMINE_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\rubymine.vmoptions', 'RUSTROVER_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\rustrover.vmoptions', 'SESSIONNAME': 'Console', 'STUDIO_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\studio.vmoptions', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\13592\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\13592\\AppData\\Local\\Temp', 'USERDOMAIN': 'JIMKK', 'USERDOMAIN_ROAMINGPROFILE': 'JIMKK', 'USERNAME': '13592', 'USERPROFILE': 'C:\\Users\\13592', 'WEBIDE_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\webide.vmoptions', 'WEBSTORM_VM_OPTIONS': 'C:\\Users\\13592\\Desktop\\jetbra\\vmoptions\\webstorm.vmoptions', 'WINDIR': 'C:\\WINDOWS', 'YAKIT_HOME': 'D:\\work\\Yakit\\yakit-projects'})